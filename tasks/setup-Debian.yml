---
- name: "Create /etc/module-load.d if not existent"
  file:
    path: /etc/module-load.d
    state: directory

- name: "Template file to /etc/module-load.d/containerd.conf"
  template:
    src: "module.conf"
    dest: "/etc/modules-load.d/containerd.conf"
    owner:
    group:
    mode: u=rw,g=r,o=r
  become: true

- name: "modprobe overlay"
  modprobe: 
    name: overlay
    state: present

- name: "modproble br_netfilter"
  modprobe:
    name: br_netfilter
    state: present

- name: "Template file to /etc/sysctl.d/99-kubernetes-cri.conf"
  template:
    src: "99-kubernetes-cri.conf"
    dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
    owner:
    group:
    mode: u=rw,g=r,o=r

- name: "Reload Sysctl"
  shell: sysctl --system
  become: true

- name: "Ensure dependencies are installed."
  apt:
    name:
    - apt-transport-https
    - ca-certificates
    - gnupg2
    - curl
    - software-properties-common
    state: present

- name: Add Docker apt key.
  apt_key:
    url: "{{ docker_apt_gpg_key }}"
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key
  ignore_errors: "{{ docker_apt_ignore_key_error }}"

- name: Ensure curl is present (on older systems without SNI).
  package: name=curl state=present
  when: add_repository_key is failed

- name: Add Docker apt key (alternative for older systems without SNI).
  shell: >
    curl -sSL {{ docker_apt_gpg_key }} | apt-key add -
  args:
    warn: false
  when: add_repository_key is failed

- name: Add Docker repository.
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true

- name: "Install containerd"
  apt:
    name:
    - containerd
    state: present

- name: "Load containerd default Config"
  shell: "containerd config default > /etc/containerd/config.toml"

- name: "Create /etc/systemd/system/containerd.service.d if not existent"
  file:
    path: /etc/systemd/system/containerd.service.d
    state: directory
  
- name: "Create Service Config for Proxy"
  template:
    src: "http-proxy.conf"
    dest: "/etc/systemd/system/containerd.service.d/proxy.conf"
    owner: 
    group:
    mode: u=rw,g=r,o=r

- name: "Daemon-Reload and restart containerd.serivce"
  systemd:
    daemon_reload: yes
    name: containerd
    state: restarted

- name: "Restart containerd.service"
  service:
    name: containerd
    state: restarted
